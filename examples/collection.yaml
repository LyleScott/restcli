---
pre_run: |
    def set_env(status, var, path, ignore_missing_index=False,
                ignore_missing_key=False):
        if response.status_code == status:
            value = response.json()

            for key in path:
                try:
                    value = value[key]
                except IndexError as exc:
                    if not ignore_missing_index:
                        raise exc
                except KeyError as exc:
                    if not ignore_missing_key:
                        raise exc
            env[var] = value

defaults:
    headers:
        Content-Type: application/json
        Accept: application/json
        Authorization: 'JWT {{ jwt_token }}'

---
auth:
    login:
        method: post
        url: '{{ host }}/auth/login'
        headers:
            Content-Type: application/json
            Accept: application/json
        body: |
            username: '{{ username }}'
            password: '{{ password }}'
        script: |
            set_env(200, 'jwt_token', ['token'])
action-types:
    list:
        method: get
        url: '{{ host }}/action_types'
        script: |
            set_env(200, 'action_type_name', [0, 'name']',
                    ignore_missing_index=True)
#            if response.status_code == 200:
#                action_types = response.json()
#                if action_types:
#                    env['action_type_name'] = action_types[0]['name']
    get:
        method: get
        url: '{{ host }}/action_types/{{ action_type_name }}'
        script: |
            set_env(200, 'action_type_name', ['name'])
actions:
    list:
        method: get
        url: '{{ host }}/actions'
        script: |
            if response.status_code == 200:
                actions = response.json()
                if actions:
                    env['action_id'] = actions[0]['id']
    post:
        method: post
        url: '{{ host }}/actions'
        body: |
            name: POST Action
            type: {{ action_type_name }}
            device: {{ device_id }}
            space: {{ space_id }}
        script: |
            if response.status_code == 201:
                env['action_id'] = response.json()['id']
    opt-list:
        method: options
        url: '{{ host }}/actions'
    get:
        method: get
        url: '{{ host }}/actions/{{ action_id }}'
        script: |
            if response.status_code == 200:
                env['action_id'] = response.json()['id']
    del:
        method: delete
        url: '{{ host }}/actions/{{ action_id }}'
    opt-detail:
        method: options
        url: '{{ host }}/actions/{{ action_id }}'
partners:
    list:
        method: get
        url: '{{ host }}/partners'
        script: |
            if response.status_code == 200:
                partners = response.json()
                if partners:
                    env['partner_id'] = partners[0]['id']
    post:
        method: post
        url: '{{ host }}/partners'
        body: |
            name: POST Partner
            description: A Partner that doesn't really exist.
            location:
                addr1: 123 Foo St.
                city: Jupiter
                state: Florida
                country: United States
                postal_code: 33713
        script: |
            if response.status_code == 201:
                env['partner_id'] = response.json()['id']
    opt-list:
        method: options
        url: '{{ host }}/partners'
    get:
        method: get
        url: '{{ host }}/partners/{{ partner_id }}'
        script: |
            if response.status_code == 200:
                env['partner_id'] = response.json()['id']
    put:
        method: put
        url: '{{ host }}/partners{{ partner_id }}'
        body: |
            name: PUT Partner
            description: A Partner that _really_ doesn't exist.
            location:
                addr1: 345 Bar Ave.
                city: Saint Petersburg
                state: Florida
                country: United States
                postal_code: 33701
    patch:
        method: patch
        url: '{{ host }}/partners{{ partner_id }}'
        body: |
            name: PATCH Partner
    del:
        method: delete
        url: '{{ host }}/partners{{ partner_id }}'
    opt-detail:
        method: options
        url: '{{ host }}/partners{{ partner_id }}'
