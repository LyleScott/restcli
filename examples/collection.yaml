---
auth:
    login:
        method: post
        url: '{{ host }}/auth/login'
        headers: |
            Content-Type: application/json
            Accept: application/json
        body: |
            username: '{{ username }}'
            password: '{{ password }}'
        script: |
            if response.status_code == 200:
                env['jwt_token'] = response.json()['token']
partners:
    list:
        method: get
        url: '{{ host }}/partners'
        headers: |
            Content-Type: application/json
            Accept: application/json
            Authorization: 'JWT {{ jwt_token }}'
        script: |
            if response.status_code == 200:
                partners = response.json()
                if partners:
                    env['partner_id'] = partners[0]['id']
    retrieve:
        method: get
        url: '{{ host }}/partners/{{ partner_id }}'
        headers: |
            Content-Type: application/json
            Accept: application/json
            Authorization: 'JWT {{ jwt_token }}'
        script: |
            if response.status_code == 200:
                env['partner_id'] = response.json()['id']
    create:
        method: post
        url: '{{ host }}/partners'
        headers: |
            Content-Type: application/json
            Accept: application/json
            Authorization: 'JWT {{ jwt_token }}'
        body: |
            name: Test Partner
            description: A Partner that doesn't really exist.
            location:
                addr1: 123 Foo St.
                city: Jupiter
                state: Florida
                country: United States
                postal_code: 33713
        script: |
            if response.status_code == 201:
                env['partner_id'] = response.json()['id']
